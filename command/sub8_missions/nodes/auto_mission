#!/usr/bin/env python

import traceback
from std_srvs.srv import Empty, EmptyResponse
from twisted.internet import defer, reactor
import txros
from sub8 import tx_sub
import missions


@txros.util.cancellableInlineCallbacks
def run_mission(req, nh):
    try:
        sub = yield tx_sub.get_sub(nh)
        yield txros.util.wall_sleep(1.0)

        print 'Mission runner waiting for pose to be available'
        yield sub.last_pose()

        print 'Mission runner got pose'

        # == MISSION CODE HERE ===================
        yield missions.tx_test.run(sub)


        print "DONE"
        
    except Exception:
        traceback.print_exc()

    finally:
        defer.returnValue(EmptyResponse())

@txros.util.cancellableInlineCallbacks
def main():
    nh = yield txros.NodeHandle.from_argv('sub8_auto_mission')
    nh.advertise_service('/go_auto', Empty, lambda req: run_mission(req, nh))

def _start():
    task = main().addErrback(lambda fail: fail.trap(defer.CancelledError))

if __name__ == '__main__':
    reactor.callWhenRunning(_start)
    reactor.run()
